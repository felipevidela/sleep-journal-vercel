@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --bg: 245 245 255;
  
  /* Light mode colors */
  --bg-primary: 255 255 255;
  --bg-secondary: 249 250 251;
  --bg-accent: 241 245 249;
  --text-primary: 17 24 39;
  --text-secondary: 75 85 99;
  --border: 229 231 235;
  --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  
  /* Gradients */
  --gradient-bg: linear-gradient(135deg, rgb(238, 242, 255) 0%, rgb(255, 255, 255) 50%, rgb(240, 249, 255) 100%);
  --gradient-card: linear-gradient(135deg, rgb(99, 102, 241) 0%, rgb(14, 165, 233) 50%, rgb(34, 197, 94) 100%);
}

.dark {
  /* Premium dark mode colors with superior contrast and eye comfort */
  --bg-primary: 17 24 39;      /* slate-900 - Deep, rich background */
  --bg-secondary: 30 41 59;    /* slate-800 - Elevated surfaces */
  --bg-accent: 51 65 85;       /* slate-700 - Interactive elements */
  --bg-elevated: 30 41 59;     /* slate-800 - Cards and modals */
  --bg-surface: 15 23 42;      /* slate-900 - Main surface */
  --bg-overlay: 0 0 0;         /* Pure black for overlays */
  
  /* High contrast text hierarchy */
  --text-primary: 248 250 252;    /* slate-50 - Primary text, max readability */
  --text-secondary: 226 232 240;  /* slate-200 - Secondary text, high contrast */
  --text-tertiary: 203 213 225;   /* slate-300 - Tertiary text */
  --text-muted: 148 163 184;      /* slate-400 - Muted text */
  --text-disabled: 100 116 139;   /* slate-500 - Disabled state */
  
  /* Refined border system */
  --border: 51 65 85;          /* slate-700 - Default borders */
  --border-light: 71 85 105;   /* slate-600 - Hover borders */
  --border-strong: 100 116 139; /* slate-500 - Accent borders */
  --border-accent: 79 70 229;   /* indigo-600 - Interactive borders */
  
  /* Enhanced shadow system for depth */
  --shadow: 0 1px 3px rgba(0, 0, 0, 0.5), 0 1px 2px rgba(0, 0, 0, 0.3);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.4), 0 2px 4px -1px rgba(0, 0, 0, 0.25);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.4), 0 4px 6px -2px rgba(0, 0, 0, 0.25);
  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.4), 0 10px 10px -5px rgba(0, 0, 0, 0.2);
  --shadow-glow: 0 0 20px rgba(79, 70, 229, 0.15);
  
  /* Premium gradients with perfect contrast */
  --gradient-bg: radial-gradient(ellipse at top, rgb(15, 23, 42) 0%, rgb(9, 17, 34) 50%, rgb(2, 6, 23) 100%);
  --gradient-card: linear-gradient(135deg, rgb(99, 102, 241) 0%, rgb(79, 70, 229) 25%, rgb(59, 130, 246) 50%, rgb(34, 197, 94) 75%, rgb(16, 185, 129) 100%);
  --gradient-card-hover: linear-gradient(135deg, rgb(129, 132, 255) 0%, rgb(109, 100, 255) 25%, rgb(89, 160, 255) 50%, rgb(54, 217, 114) 75%, rgb(36, 205, 149) 100%);
  --gradient-accent: linear-gradient(90deg, rgb(99, 102, 241) 0%, rgb(59, 130, 246) 100%);
  
  /* Status colors optimized for dark mode */
  --success: 34 197 94;        /* emerald-500 */
  --warning: 245 158 11;       /* amber-500 */
  --error: 239 68 68;          /* red-500 */
  --info: 59 130 246;          /* blue-500 */
}

html, body {
  height: 100%;
  transition: background-color 0.3s ease, color 0.3s ease;
}

body {
  background: var(--gradient-bg);
  color: rgb(var(--text-primary));
  min-height: 100vh;
}

/* Ensure dark mode is properly applied */
html.dark {
  color-scheme: dark;
}

html:not(.dark) {
  color-scheme: light;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

/* Custom scrollbar */
* {
  scrollbar-width: thin;
  scrollbar-color: rgba(var(--text-secondary), 0.3) transparent;
}
*::-webkit-scrollbar {
  height: 8px;
  width: 8px;
}
*::-webkit-scrollbar-thumb {
  background: rgba(var(--text-secondary), 0.3);
  border-radius: 4px;
}
*::-webkit-scrollbar-thumb:hover {
  background: rgba(var(--text-secondary), 0.5);
}

/* Enhanced component styles with superior dark mode support */
.card {
  @apply rounded-2xl border transition-all duration-300 backdrop-blur-sm;
  background: rgba(var(--bg-primary), 0.95);
  border-color: rgb(var(--border));
  box-shadow: var(--shadow);
  position: relative;
  overflow: hidden;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent 0%, rgba(var(--text-secondary), 0.1) 50%, transparent 100%);
  opacity: 0.5;
}

.card:hover {
  border-color: rgb(var(--border-light));
  box-shadow: var(--shadow-lg);
  transform: translateY(-2px);
  background: rgba(var(--bg-primary), 1);
}

.dark .card:hover {
  box-shadow: var(--shadow-lg), var(--shadow-glow);
}

.card-elevated {
  @apply rounded-2xl border transition-all duration-300 backdrop-blur-md;
  background: rgba(var(--bg-elevated), 0.98);
  border-color: rgb(var(--border-light));
  box-shadow: var(--shadow-md);
  position: relative;
}

.card-elevated::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(var(--text-primary), 0.02) 0%, transparent 50%, rgba(var(--text-primary), 0.01) 100%);
  pointer-events: none;
  border-radius: inherit;
}

.card-accent {
  @apply rounded-2xl p-[1px] shadow-lg transition-all duration-300 relative overflow-hidden;
  background: var(--gradient-card);
}

.card-accent::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--gradient-card);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.card-accent:hover {
  background: var(--gradient-card-hover);
  transform: translateY(-2px);
  box-shadow: var(--shadow-xl);
}

.card-accent:hover::before {
  opacity: 0.1;
}

.card-accent > * {
  @apply rounded-2xl p-6 sm:p-8 relative z-10;
  background: rgba(var(--bg-primary), 0.98);
  backdrop-filter: blur(10px);
}

.input-field {
  @apply w-full rounded-xl border px-4 py-3 text-sm outline-none ring-0 transition-all duration-200 backdrop-blur-sm;
  background: rgba(var(--bg-secondary), 0.8);
  border-color: rgb(var(--border));
  color: rgb(var(--text-primary));
  font-family: inherit;
  font-weight: inherit;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05), var(--shadow);
  position: relative;
}

.dark .input-field {
  background: rgba(var(--bg-secondary), 0.6);
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.3), var(--shadow);
}

.input-field:focus {
  border-color: rgb(var(--border-accent));
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05), 0 0 0 3px rgba(79, 70, 229, 0.15), var(--shadow-md);
  transform: translateY(-1px);
  background: rgba(var(--bg-primary), 0.95);
}

.dark .input-field:focus {
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.3), var(--shadow-glow), var(--shadow-md);
  background: rgba(var(--bg-primary), 0.9);
}

.input-field:hover:not(:focus) {
  border-color: rgb(var(--border-light));
  background: rgba(var(--bg-primary), 0.9);
  transform: translateY(-0.5px);
}

.dark .input-field:hover:not(:focus) {
  background: rgba(var(--bg-primary), 0.8);
}

.input-field::placeholder {
  color: rgb(var(--text-muted));
  font-weight: 400;
}

/* Enhanced textarea styling */
textarea.input-field {
  resize: vertical;
  min-height: 80px;
}

/* Ensure date inputs use the same font */
input[type="date"] {
  font-family: inherit !important;
  font-weight: inherit !important;
}

/* Date input specific webkit styling */
input[type="date"]::-webkit-datetime-edit,
input[type="date"]::-webkit-datetime-edit-fields-wrapper,
input[type="date"]::-webkit-datetime-edit-text,
input[type="date"]::-webkit-datetime-edit-month-field,
input[type="date"]::-webkit-datetime-edit-day-field,
input[type="date"]::-webkit-datetime-edit-year-field {
  font-family: inherit !important;
  font-weight: inherit !important;
  font-size: inherit !important;
}

/* Date input calendar button */
input[type="date"]::-webkit-calendar-picker-indicator {
  font-family: inherit !important;
  filter: invert(1) opacity(0.7);
}

.dark input[type="date"]::-webkit-calendar-picker-indicator {
  filter: invert(0) opacity(0.7);
}

/* Firefox date input styling */
input[type="date"]::-moz-datetime-edit,
input[type="date"]::-moz-datetime-edit-fields-wrapper,
input[type="date"]::-moz-datetime-edit-text,
input[type="date"]::-moz-datetime-edit-month-field,
input[type="date"]::-moz-datetime-edit-day-field,
input[type="date"]::-moz-datetime-edit-year-field {
  font-family: inherit !important;
  font-weight: inherit !important;
  font-size: inherit !important;
}

.btn {
  @apply inline-flex items-center justify-center rounded-xl border px-4 py-3 text-sm font-medium shadow-sm transition-all duration-200 backdrop-blur-sm relative overflow-hidden;
  background: rgba(var(--bg-secondary), 0.8);
  border-color: rgb(var(--border));
  color: rgb(var(--text-primary));
  font-weight: 500;
  position: relative;
}

.dark .btn {
  background: rgba(var(--bg-secondary), 0.6);
  box-shadow: var(--shadow);
}

.btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(var(--text-primary), 0.05) 0%, transparent 100%);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.btn:hover {
  background: rgba(var(--bg-accent), 0.9);
  border-color: rgb(var(--border-light));
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.dark .btn:hover {
  background: rgba(var(--bg-accent), 0.8);
  box-shadow: var(--shadow-lg), var(--shadow-glow);
}

.btn:hover::before {
  opacity: 1;
}

.btn:active {
  transform: translateY(-1px);
}

.btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  background: rgba(var(--bg-secondary), 0.4);
}

.btn:disabled::before {
  display: none;
}

.btn-primary {
  @apply relative overflow-hidden transition-all duration-200;
  background: var(--gradient-card);
  color: white;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.75rem;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  font-weight: 500;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
}

.btn-primary:hover:not(:disabled) {
  background: var(--gradient-card-hover);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.15);
}

.btn-primary:active {
  transform: translateY(-1px);
}

.btn-primary::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(255,255,255,0.2) 0%, transparent 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.btn-primary:hover:not(:disabled)::before {
  opacity: 1;
}

.text-accent {
  background: var(--gradient-card);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* Enhanced dark mode styles for better visual hierarchy */
.dark h1, .dark h2, .dark h3, .dark h4, .dark h5, .dark h6 {
  color: rgb(var(--text-primary));
  font-weight: 600;
  letter-spacing: -0.025em;
}

.dark .text-lg {
  color: rgb(var(--text-secondary));
}

.dark .text-sm {
  color: rgb(var(--text-tertiary));
}

.dark .text-xs {
  color: rgb(var(--text-muted));
}

/* Enhanced backdrop and glass effects */
.glass-effect {
  backdrop-filter: blur(20px) saturate(180%);
  background: rgba(var(--bg-primary), 0.85);
  border: 1px solid rgba(var(--border-light), 0.2);
}

.dark .glass-effect {
  background: rgba(var(--bg-primary), 0.6);
  border: 1px solid rgba(var(--border-light), 0.1);
}

/* Improved status indicators */
.status-success {
  background: rgba(var(--success), 0.1);
  color: rgb(var(--success));
  border: 1px solid rgba(var(--success), 0.2);
}

.status-warning {
  background: rgba(var(--warning), 0.1);
  color: rgb(var(--warning));
  border: 1px solid rgba(var(--warning), 0.2);
}

.status-error {
  background: rgba(var(--error), 0.1);
  color: rgb(var(--error));
  border: 1px solid rgba(var(--error), 0.2);
}

.status-info {
  background: rgba(var(--info), 0.1);
  color: rgb(var(--info));
  border: 1px solid rgba(var(--info), 0.2);
}

/* Enhanced focus rings for accessibility */
.focus-ring {
  @apply outline-none;
}

.focus-ring:focus-visible {
  outline: 2px solid rgb(var(--border-accent));
  outline-offset: 2px;
}

.dark .focus-ring:focus-visible {
  outline: 2px solid rgba(var(--border-accent), 0.8);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(var(--border-accent), 0.1);
}

/* Improved animations and transitions */
* {
  transition-property: background-color, border-color, color, box-shadow, transform, opacity;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced scrollbar for dark mode */
.dark *::-webkit-scrollbar-thumb {
  background: rgba(var(--text-secondary), 0.4);
  border-radius: 6px;
}

.dark *::-webkit-scrollbar-thumb:hover {
  background: rgba(var(--text-secondary), 0.6);
}

.dark *::-webkit-scrollbar-track {
  background: rgba(var(--bg-secondary), 0.3);
}

/* Custom selection colors */
::selection {
  background: rgba(var(--border-accent), 0.2);
  color: rgb(var(--text-primary));
}

.dark ::selection {
  background: rgba(var(--border-accent), 0.3);
  color: rgb(var(--text-primary));
}
